{
	"main": {
		"prefix": "main",
		"body": [
			"def main():",
			"    $0\n",
			"if __name__ == '__main__':",
			"    main()",
		],
		"description": "main func"
	},
	"gcd": {
		"prefix": "gcd",
		"body": [
			"def gcd(a, b):",
			"    return b if a % b == 0 else gcd(b, a % b)\n"
		],
		"description": "gcd"
	},
	"isPrime": {
		"prefix": "isprime",
		"body": [
			"def isPrime(x):",
			"    if x == 2: return True",
			"    if x < 2 or x % 2 == 0: return False",
			"    for i in range(3, int(x**0.5) + 1, 2):",
			"        if x % i == 0: return False",
			"    return True\n",
		],
		"description": "sosu hantei"
	},
	"dsum": {
		"prefix": "dsum",
		"body": [
			"def dsum(n):",
			"    wa = 0",
			"    while n > 0:",
			"        wa += n % 10",
			"        n //= 10",
			"    return wa\n",
		],
		"description": "digit sum"
	},
	"N_equal": {
		"prefix": "neq",
		"body": [
			"n = int(input())\n",
		],
		"description": "N=int(input(.."
	},
	"A_equal": {
		"prefix": "aeq",
		"body": [
			"A = list(map(int, input().split()))\n",
		],
		"description": "A=list(map(.."
	},
	"enum_divisor": {
		"prefix": "enumdiv",
		"body": [
			"def enum_div(n):",
			"    dv = []",
			"    for i in range(1, int(n**0.5)+1):",
			"        if n%i == 0:",
			"            dv.append(i)",
			"            if i != n//i:",
			"                dv.append(n//i)",
			"    #dv.sort()",
			"    return dv\n",
		],
		"description": "return yakusuu"
	},
	"parts": {
		"prefix": "parts",
		"body": [
			"import sys\n",
			"# input=sys.stdin.readline",
			"# sys.setrecursionlimit(2147483647)",
			"INF = float(\"inf\")",
			"MOD = 10**9 + 7\n",
		],
		"description": "basic parts"
	},
	"prime_factrization": {
		"prefix": "primefact",
		"body": [
			"def primeFact(n):",
			"    i = 2",
			"    pl = []",
			"    while i * i <= n:",
			"        while n % i == 0:",
			"            n /= i",
			"            pl.append(i)",
			"        i += 1",
			"    if n > 1:",
			"        pl.append(int(n))",
			"    return pl\n",
		],
		"description": "soinsubunkai"
	},
}